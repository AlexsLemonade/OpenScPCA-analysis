name: Code styling
on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "0 0 1 * *" # first of every month at midnight


concurrency:
  # only one run per branch at a time
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  style-code:
    runs-on: ubuntu-latest
    name: Perform code styling

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      #- name: Load 1Password secrets
      #  uses: 1password/load-secrets-action@v1
      #  with:
      #    export-env: true
      #  env:
      #    # TODO: Which tokens do we actually need here?
      #    OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets. }}
      #    DOCS_BOT_GITHUB_TOKEN: ${{ secrets. }}

      ## First, style the R code ##
      - name: Install R
        uses: r-lib/actions/setup-r@v2

      - name: Install R dependencies
        run: install.packages("styler", repos = "https://p3m.dev/cran/__linux__/jammy/latest")
        shell: Rscript --no-init-file {0}

      - name: Style analysis modules R code
        run: |
          list.dirs("analyses") |>
            purrr::walk(styler::style_dir, filetype = c("R", "r", "Rmd", "rmd"))
        shell: Rscript --no-init-file {0}

      # maybe - hack since it seems to want to restyle renv/activate.R which maybe we don't want?
      #- name: Check out any renv files modified by the styler


      ## Second, style the python code ##
      - name: Format python files
        uses: chartboost/ruff-action@v1
        with:
          args: format analyses/

      - name: Create PR with styled code
        uses: peter-evans/create-pull-request@v6 # defaults to ${GITHUB_TOKEN} token
        with:
          commit-message: Styled code
          signoff: false
          branch: style-analysis-modules
          base: main
          delete-branch: true
          title: "GHA: Automated analysis module code styling"
          body: |
            ### Description:
            This PR was auto-generated by GitHub Actions to style all R (scripts and notebooks) and Python (scripts only) code in `analyses`.

            ### Instruction for reviewers:
              Make sure that all code changes are acceptable.
          labels: |
            OpenScPCA admin
            code styling
