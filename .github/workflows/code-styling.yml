# GitHub Action to perform code styling.
# This action reads in a list of modules that should be styled from the file `modules_code-styling.txt`.
# A PR is opened for each module whose code was modified by the stylers.

name: Code styling
on:
  workflow_dispatch:
 #  schedule:
 #    - cron: "0 0 15 1/3 *" # 15th of every 3rd month. Not currently in use.


concurrency:
  # only one run per branch at a time
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:

  setup-module-matrix:
    runs-on: ubuntu-latest
    name: Setup the module matrix
    outputs:
      module: ${{ steps.read-modules.outputs.module }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read in list of analysis modules to style
        id: read-modules
        run: |
          # From input `modules_code-styling.txt`, read in modules to style, reformat, and save to $GITHUB_OUTPUT
          echo "module=$(jq -nRc '[inputs]|map(select(length>0))' .github/workflows/modules_code-styling.txt)" >> $GITHUB_OUTPUT

  style-code:
    runs-on: ubuntu-latest
    name: Perform code styling
    needs: setup-module-matrix
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJSON(needs.setup-module-matrix.outputs.module) }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      ## First, style the R code ##
      - name: Install R
        uses: r-lib/actions/setup-r@v2

      - name: Install R dependencies
        run: install.packages(c("styler", "knitr", "roxygen2"), repos = "https://p3m.dev/cran/__linux__/jammy/latest")
        shell: Rscript --no-init-file {0}

      - name: Style R code for each analysis module
        run: |
          list.files(
            file.path(
              "analyses",
              "${{ matrix.module }}"
            ),
            recursive = TRUE,
            full.names = TRUE,
            pattern = "\\.(r|rmd)$", ignore.case = TRUE
          ) |>
            # do not style renv/activate.R
            purrr::discard(\(x) grepl("renv/activate.R", x)) |>
            # perform styling
            styler::style_file()
        shell: Rscript --no-init-file {0}

      ## Second, style the python code ##
      - name: Style Python code for each analysis module
        uses: chartboost/ruff-action@v1
        with:
          args: format
          src: "analyses/${{ matrix.module }}/"

      - name: Create PR with styled code
        uses: peter-evans/create-pull-request@v6 # defaults to ${GITHUB_TOKEN} token
        with:
          commit-message: Styled code
          signoff: false
          branch: style-module_${{ matrix.module }}
          base: main
          delete-branch: true
          title: "GHA: Automated code styling for analysis module: ${{ matrix.module }}"
          body: |
            ### Description:
            This PR was auto-generated by GitHub Actions to style all R and Python code (in scripts and notebooks) in `analyses/${{ matrix.module }}`.

            ### Instruction for reviewers:
            Make sure that all code changes are acceptable.
          labels: |
            OpenScPCA admin
            code styling
